{"ast":null,"code":"var _jsxFileName = \"/home/general/Escritorio/Front_stafko/src/Components/Proyectos/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table } from 'primereact/table';\nimport { Button } from 'primereact/button';\nimport Swal from 'sweetalert2';\nimport { getConnection, getRepository } from 'typeorm';\nimport { Project } from './entities/Project'; // Asume que tienes una entidad Project definida en './entities/Project'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [proyectos, setProyectos] = useState([]);\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const fetchProjects = async () => {\n    try {\n      const projectRepository = getRepository(Project);\n      const projects = await projectRepository.find();\n      setProyectos(projects);\n    } catch (error) {\n      console.error(\"Error al obtener los proyectos:\", error);\n    }\n  };\n  const deleteProject = async id => {\n    try {\n      const projectRepository = getRepository(Project);\n      await projectRepository.delete(id);\n      // Mostrar una alerta SweetAlert al eliminar el proyecto\n      Swal.fire({\n        title: 'Proyecto eliminado',\n        text: 'El proyecto ha sido eliminado exitosamente.',\n        icon: 'success',\n        confirmButtonText: 'Aceptar'\n      });\n      // Actualizar la lista de proyectos después de eliminar\n      fetchProjects();\n    } catch (error) {\n      console.error(\"Error al eliminar el proyecto:\", error);\n    }\n  };\n  const columns = [{\n    field: 'id',\n    header: 'ID'\n  }, {\n    field: 'name',\n    header: 'Name'\n  }, {\n    field: 'description',\n    header: 'Description'\n  }, {\n    field: 'actions',\n    header: 'Actions'\n  }];\n  const actionTemplate = rowData => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        label: \"Delete\",\n        icon: \"pi pi-trash\",\n        className: \"p-button-rounded p-button-danger\",\n        onClick: () => deleteProject(rowData.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  };\n  const dynamicColumns = columns.map(col => {\n    if (col.field === 'actions') {\n      return {\n        ...col,\n        body: actionTemplate\n      };\n    }\n    return col;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      value: proyectos,\n      header: \"Projects\",\n      className: \"p-datatable-striped\",\n      children: dynamicColumns.map(col => /*#__PURE__*/_jsxDEV(\"columns\", {\n        field: col.field,\n        header: col.header\n      }, col.field, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"xkfqDAHM5rqFAZG1D2mK9PgKleo=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","Swal","getConnection","getRepository","Project","jsxDEV","_jsxDEV","Dashboard","_s","proyectos","setProyectos","fetchProjects","projectRepository","projects","find","error","console","deleteProject","id","delete","fire","title","text","icon","confirmButtonText","columns","field","header","actionTemplate","rowData","children","label","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","dynamicColumns","map","col","body","value","_c","$RefreshReg$"],"sources":["/home/general/Escritorio/Front_stafko/src/Components/Proyectos/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Table } from 'primereact/table';\nimport { Button } from 'primereact/button';\nimport Swal from 'sweetalert2';\nimport { getConnection, getRepository } from 'typeorm';\nimport { Project } from './entities/Project'; // Asume que tienes una entidad Project definida en './entities/Project'\n\nconst Dashboard = () => {\n    const [proyectos, setProyectos] = useState([]);\n\n    useEffect(() => {\n        fetchProjects();\n    }, []);\n\n    const fetchProjects = async () => {\n        try {\n            const projectRepository = getRepository(Project);\n            const projects = await projectRepository.find();\n            setProyectos(projects);\n        } catch (error) {\n            console.error(\"Error al obtener los proyectos:\", error);\n        }\n    };\n\n    const deleteProject = async (id) => {\n        try {\n            const projectRepository = getRepository(Project);\n            await projectRepository.delete(id);\n            // Mostrar una alerta SweetAlert al eliminar el proyecto\n            Swal.fire({\n                title: 'Proyecto eliminado',\n                text: 'El proyecto ha sido eliminado exitosamente.',\n                icon: 'success',\n                confirmButtonText: 'Aceptar'\n            });\n            // Actualizar la lista de proyectos después de eliminar\n            fetchProjects();\n        } catch (error) {\n            console.error(\"Error al eliminar el proyecto:\", error);\n        }\n    };\n\n    const columns = [\n        { field: 'id', header: 'ID' },\n        { field: 'name', header: 'Name' },\n        { field: 'description', header: 'Description' },\n        { field: 'actions', header: 'Actions' },\n    ];\n\n    const actionTemplate = (rowData) => {\n        return (\n            <div>\n                <Button label=\"Delete\" icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger\" onClick={() => deleteProject(rowData.id)} />\n            </div>\n        );\n    };\n\n    const dynamicColumns = columns.map((col) => {\n        if (col.field === 'actions') {\n            return { ...col, body: actionTemplate };\n        }\n        return col;\n    });\n\n    return (\n        <div>\n            <Table value={proyectos} header=\"Projects\" className=\"p-datatable-striped\">\n                {dynamicColumns.map((col) => (\n                    <columns key={col.field} field={col.field} header={col.header} />\n                ))}\n            </Table>\n        </div>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}