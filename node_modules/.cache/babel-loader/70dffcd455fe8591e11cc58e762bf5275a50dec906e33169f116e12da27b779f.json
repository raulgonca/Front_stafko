{"ast":null,"code":"//import React, { useState, useEffect } from \"react\";\n//import ReactDOM from \"react-dom\";\n//import Swal from 'sweetalert2';\n//import { FaPlus, FaTimes } from 'react-icons/fa';\n//import ProyectoForm from \"./ProyectoForm\";\n//import ProyectoEdit from \"./ProyectoEdit\";\n//\n//const ProyectoCard = ({ proyecto, onEditar, onEliminar }) => {\n//  return (\n//    <div className=\"card w-96 bg-white shadow-lg rounded-lg p-6 flex flex-col justify-between\">\n//      <div>\n//        <h3 className=\"text-lg font-semibold text-gray-800\">{proyecto.nameproject}</h3>\n//        <p className=\"text-gray-600 mt-2\">{proyecto.description}</p>\n//      </div>\n//      <div className=\"flex justify-between mt-4\">\n//        <button\n//          onClick={() => onEditar(proyecto)}\n//          className=\"px-4 py-2 bg-blue-500 text-white font-semibold rounded-lg shadow-md transition duration-300 hover:bg-blue-600 focus:outline-none\"\n//        >\n//          Editar\n//        </button>\n//        <button\n//          onClick={() => onEliminar(proyecto.id)}\n//          className=\"px-4 py-2 bg-red-500 text-white font-semibold rounded-lg shadow-md transition duration-300 hover:bg-red-600 focus:outline-none\"\n//        >\n//          Eliminar\n//        </button>\n//      </div>\n//    </div>\n//  );\n//};\n//\n//\n//const Main = () => {\n//  const [proyectos, setProyectos] = useState([]);\n//  const [mostrarFormulario, setMostrarFormulario] = useState(false);\n//  const [proyectoEditar, setProyectoEditar] = useState(null);\n//\n//  useEffect(() => {\n//    getAllProject();\n//  }, []);\n//\n//  const getAllProject = async () => {\n//    try {\n//      const response = await fetch(\"http://localhost:3000/projects/\");\n//      if (response.ok) {\n//        const data = await response.json();\n//        setProyectos(data);\n//      } else {\n//        throw new Error(\"Error al obtener los proyectos: \" + response.statusText);\n//      }\n//    } catch (error) {\n//      console.error(\"Error al comunicarse con el servidor:\", error);\n//      Swal.fire({\n//        title: 'Error',\n//        text: 'Hubo un problema al cargar los proyectos. Por favor, intenta nuevamente m치s tarde.',\n//        icon: 'error',\n//        confirmButtonText: 'Aceptar'\n//      });\n//    }\n//  };\n//\n//  const handleCrearProyecto = () => {\n//    setProyectoEditar(null);\n//    setMostrarFormulario(true);\n//  };\n//\n//  const handleEditarProyecto = (proyecto) => {\n//    setProyectoEditar(proyecto);\n//    setMostrarFormulario(true);\n//  };\n//\n//  const handleEliminarProyecto = async (proyectoId) => {\n//    try {\n//      const response = await fetch(`http://localhost:3000/projects/${proyectoId}`, {\n//        method: \"DELETE\"\n//      });\n//      if (response.ok) {\n//        Swal.fire({\n//          title: 'Proyecto eliminado',\n//          text: 'El proyecto ha sido eliminado exitosamente.',\n//          icon: 'success',\n//          confirmButtonText: 'Aceptar'\n//        });\n//        getAllProject();\n//      } else {\n//        throw new Error(\"Error al eliminar el proyecto: \" + response.statusText);\n//      }\n//    } catch (error) {\n//      console.error(\"Error al comunicarse con el servidor:\", error);\n//      Swal.fire({\n//        title: 'Error',\n//        text: 'Hubo un problema al eliminar el proyecto. Por favor, intenta nuevamente m치s tarde.',\n//        icon: 'error',\n//        confirmButtonText: 'Aceptar'\n//      });\n//    }\n//  };\n//\n//  const handleActualizarProyectos = () => {\n//    getAllProject();\n//  };\n//\n//  const handleCloseFormulario = () => {\n//    setMostrarFormulario(false);\n//  };\n//\n//  const modalContainer = document.getElementById('modal-container');\n//\n//  return (\n//    <>\n//      {ReactDOM.createPortal(\n//        mostrarFormulario ? (\n//          <div id=\"modal-container\" className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n//            <div className=\"bg-gray-100 w-96 p-4 rounded-lg shadow-lg relative z-50\">\n//              <button\n//                onClick={handleCloseFormulario}\n//                className=\"absolute top-2 right-2 text-gray-500 hover:text-gray-700 focus:outline-none\"\n//              >\n//                <FaTimes />\n//              </button>\n//              <div className=\"form-container\">\n//                {proyectoEditar ? (\n//                  <ProyectoEdit\n//                    proyectoInicial={proyectoEditar}\n//                    onSubmit={handleCloseFormulario}\n//                    onProjectUpdate={handleActualizarProyectos}\n//                  />\n//                ) : (\n//                  <ProyectoForm\n//                    onSubmit={handleCloseFormulario}\n//                    onProjectUpdate={handleActualizarProyectos}\n//                  />\n//                )}\n//              </div>\n//            </div>\n//          </div>\n//        ) : null,\n//        modalContainer\n//      )}\n//\n//      <div className=\"max-w-4xl mx-auto p-6\">\n//        <header className=\"flex justify-between items-center mb-8\">\n//          <h2 className=\"text-3xl font-bold text-gray-800\">Proyectos</h2>\n//          <button\n//            onClick={handleCrearProyecto}\n//            className=\"flex items-center px-4 py-2 bg-blue-600 text-white font-semibold rounded-lg shadow-md transition duration-300 hover:bg-blue-700 hover:scale-105 focus:outline-none\"\n//          >\n//            <FaPlus className=\"mr-2\" /> Nuevo Proyecto\n//          </button>\n//        </header>\n//\n//        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\n//          {proyectos.map((proyecto) => (\n//            <ProyectoCard\n//              key={proyecto.id}\n//              proyecto={proyecto}\n//              onEditar={handleEditarProyecto}\n//              onEliminar={handleEliminarProyecto}\n//            />\n//          ))}\n//        </div>\n//      </div>\n//    </>\n//  );\n//};\n//\n//export default Main;\n//","map":{"version":3,"names":[],"sources":["/home/general/Escritorio/Nueva carpeta 2/respaldo/src/Components/Proyectos/Main.jsx"],"sourcesContent":["//import React, { useState, useEffect } from \"react\";\n//import ReactDOM from \"react-dom\";\n//import Swal from 'sweetalert2';\n//import { FaPlus, FaTimes } from 'react-icons/fa';\n//import ProyectoForm from \"./ProyectoForm\";\n//import ProyectoEdit from \"./ProyectoEdit\";\n//\n//const ProyectoCard = ({ proyecto, onEditar, onEliminar }) => {\n//  return (\n//    <div className=\"card w-96 bg-white shadow-lg rounded-lg p-6 flex flex-col justify-between\">\n//      <div>\n//        <h3 className=\"text-lg font-semibold text-gray-800\">{proyecto.nameproject}</h3>\n//        <p className=\"text-gray-600 mt-2\">{proyecto.description}</p>\n//      </div>\n//      <div className=\"flex justify-between mt-4\">\n//        <button\n//          onClick={() => onEditar(proyecto)}\n//          className=\"px-4 py-2 bg-blue-500 text-white font-semibold rounded-lg shadow-md transition duration-300 hover:bg-blue-600 focus:outline-none\"\n//        >\n//          Editar\n//        </button>\n//        <button\n//          onClick={() => onEliminar(proyecto.id)}\n//          className=\"px-4 py-2 bg-red-500 text-white font-semibold rounded-lg shadow-md transition duration-300 hover:bg-red-600 focus:outline-none\"\n//        >\n//          Eliminar\n//        </button>\n//      </div>\n//    </div>\n//  );\n//};\n//\n//\n//const Main = () => {\n//  const [proyectos, setProyectos] = useState([]);\n//  const [mostrarFormulario, setMostrarFormulario] = useState(false);\n//  const [proyectoEditar, setProyectoEditar] = useState(null);\n//\n//  useEffect(() => {\n//    getAllProject();\n//  }, []);\n//\n//  const getAllProject = async () => {\n//    try {\n//      const response = await fetch(\"http://localhost:3000/projects/\");\n//      if (response.ok) {\n//        const data = await response.json();\n//        setProyectos(data);\n//      } else {\n//        throw new Error(\"Error al obtener los proyectos: \" + response.statusText);\n//      }\n//    } catch (error) {\n//      console.error(\"Error al comunicarse con el servidor:\", error);\n//      Swal.fire({\n//        title: 'Error',\n//        text: 'Hubo un problema al cargar los proyectos. Por favor, intenta nuevamente m치s tarde.',\n//        icon: 'error',\n//        confirmButtonText: 'Aceptar'\n//      });\n//    }\n//  };\n//\n//  const handleCrearProyecto = () => {\n//    setProyectoEditar(null);\n//    setMostrarFormulario(true);\n//  };\n//\n//  const handleEditarProyecto = (proyecto) => {\n//    setProyectoEditar(proyecto);\n//    setMostrarFormulario(true);\n//  };\n//\n//  const handleEliminarProyecto = async (proyectoId) => {\n//    try {\n//      const response = await fetch(`http://localhost:3000/projects/${proyectoId}`, {\n//        method: \"DELETE\"\n//      });\n//      if (response.ok) {\n//        Swal.fire({\n//          title: 'Proyecto eliminado',\n//          text: 'El proyecto ha sido eliminado exitosamente.',\n//          icon: 'success',\n//          confirmButtonText: 'Aceptar'\n//        });\n//        getAllProject();\n//      } else {\n//        throw new Error(\"Error al eliminar el proyecto: \" + response.statusText);\n//      }\n//    } catch (error) {\n//      console.error(\"Error al comunicarse con el servidor:\", error);\n//      Swal.fire({\n//        title: 'Error',\n//        text: 'Hubo un problema al eliminar el proyecto. Por favor, intenta nuevamente m치s tarde.',\n//        icon: 'error',\n//        confirmButtonText: 'Aceptar'\n//      });\n//    }\n//  };\n//\n//  const handleActualizarProyectos = () => {\n//    getAllProject();\n//  };\n//\n//  const handleCloseFormulario = () => {\n//    setMostrarFormulario(false);\n//  };\n//\n//  const modalContainer = document.getElementById('modal-container');\n//\n//  return (\n//    <>\n//      {ReactDOM.createPortal(\n//        mostrarFormulario ? (\n//          <div id=\"modal-container\" className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n//            <div className=\"bg-gray-100 w-96 p-4 rounded-lg shadow-lg relative z-50\">\n//              <button\n//                onClick={handleCloseFormulario}\n//                className=\"absolute top-2 right-2 text-gray-500 hover:text-gray-700 focus:outline-none\"\n//              >\n//                <FaTimes />\n//              </button>\n//              <div className=\"form-container\">\n//                {proyectoEditar ? (\n//                  <ProyectoEdit\n//                    proyectoInicial={proyectoEditar}\n//                    onSubmit={handleCloseFormulario}\n//                    onProjectUpdate={handleActualizarProyectos}\n//                  />\n//                ) : (\n//                  <ProyectoForm\n//                    onSubmit={handleCloseFormulario}\n//                    onProjectUpdate={handleActualizarProyectos}\n//                  />\n//                )}\n//              </div>\n//            </div>\n//          </div>\n//        ) : null,\n//        modalContainer\n//      )}\n//\n//      <div className=\"max-w-4xl mx-auto p-6\">\n//        <header className=\"flex justify-between items-center mb-8\">\n//          <h2 className=\"text-3xl font-bold text-gray-800\">Proyectos</h2>\n//          <button\n//            onClick={handleCrearProyecto}\n//            className=\"flex items-center px-4 py-2 bg-blue-600 text-white font-semibold rounded-lg shadow-md transition duration-300 hover:bg-blue-700 hover:scale-105 focus:outline-none\"\n//          >\n//            <FaPlus className=\"mr-2\" /> Nuevo Proyecto\n//          </button>\n//        </header>\n//\n//        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\n//          {proyectos.map((proyecto) => (\n//            <ProyectoCard\n//              key={proyecto.id}\n//              proyecto={proyecto}\n//              onEditar={handleEditarProyecto}\n//              onEliminar={handleEliminarProyecto}\n//            />\n//          ))}\n//        </div>\n//      </div>\n//    </>\n//  );\n//};\n//\n//export default Main;\n//"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}