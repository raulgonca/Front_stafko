{"ast":null,"code":"var _jsxFileName = \"/home/general/Escritorio/Front_stafko/src/Pages/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Formulario from '../Components/Formulario/Formulario';\nimport { useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport Headers from \"../Container/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3000/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          username: username,\n          password: password\n        })\n      });\n      if (response.ok) {\n        console.log('Inicio de sesión exitoso');\n        navigate(`/main/${username}`);\n      } else {\n        throw new Error('Error al iniciar sesión');\n      }\n    } catch (error) {\n      console.error('Error al iniciar sesión:', error);\n      setErrorMessage('Error al iniciar sesión'); // Mensaje de error genérico\n      Swal.fire({\n        icon: 'error',\n        title: 'Error de inicio de sesión',\n        text: 'Error al iniciar sesión'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Headers, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formulario, {\n      handleChangeUser: setUsername,\n      handleChangePassword: setPassword,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"bafmy9ZNKmZHtvbzBaK9RJLAMyA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Formulario","useNavigate","Swal","Headers","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","setErrorMessage","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","credentials","body","JSON","stringify","ok","console","log","Error","error","fire","icon","title","text","children","fileName","_jsxFileName","lineNumber","columnNumber","handleChangeUser","handleChangePassword","_c","$RefreshReg$"],"sources":["/home/general/Escritorio/Front_stafko/src/Pages/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Formulario from '../Components/Formulario/Formulario';\nimport { useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport Headers from \"../Container/Header\"\n\nconst Login = () => {\n  const [ username, setUsername ] = useState('');\n  const [ password, setPassword ] = useState('');\n  const [ setErrorMessage ] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n  \n    try {\n      const response = await fetch('http://localhost:3000/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          username: username,\n          password: password\n        })\n      });\n  \n      if (response.ok) {\n        console.log('Inicio de sesión exitoso');\n        navigate(`/main/${ username }`);\n      } else {\n        throw new Error('Error al iniciar sesión');\n      }\n    } catch (error) {\n      console.error('Error al iniciar sesión:', error);\n      setErrorMessage('Error al iniciar sesión'); // Mensaje de error genérico\n      Swal.fire({\n        icon: 'error',\n        title: 'Error de inicio de sesión',\n        text: 'Error al iniciar sesión'\n      });\n    }\n  };\n\n\n\n  return (\n    <div>\n      <Headers />\n      <Formulario\n        handleChangeUser={setUsername}\n        handleChangePassword={setPassword}\n        handleSubmit={handleSubmit}\n      />\n    </div>\n  );\n};\n\nexport default Login;\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,qCAAqC;AAC5D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,OAAO,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAAEC,QAAQ,EAAEC,WAAW,CAAE,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAEW,QAAQ,EAAEC,WAAW,CAAE,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAEa,eAAe,CAAE,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMc,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,WAAW,EAAE,SAAS;QACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBhB,QAAQ,EAAEA,QAAQ;UAClBE,QAAQ,EAAEA;QACZ,CAAC;MACH,CAAC,CAAC;MAEF,IAAIO,QAAQ,CAACQ,EAAE,EAAE;QACfC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QACvCd,QAAQ,CAAE,SAASL,QAAU,EAAC,CAAC;MACjC,CAAC,MAAM;QACL,MAAM,IAAIoB,KAAK,CAAC,yBAAyB,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDjB,eAAe,CAAC,yBAAyB,CAAC,CAAC,CAAC;MAC5CV,IAAI,CAAC4B,IAAI,CAAC;QACRC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,2BAA2B;QAClCC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;EACF,CAAC;EAID,oBACE5B,OAAA;IAAA6B,QAAA,gBACE7B,OAAA,CAACF,OAAO;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXjC,OAAA,CAACL,UAAU;MACTuC,gBAAgB,EAAE9B,WAAY;MAC9B+B,oBAAoB,EAAE7B,WAAY;MAClCG,YAAY,EAAEA;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAnDID,KAAK;EAAA,QAIQL,WAAW;AAAA;AAAAwC,EAAA,GAJxBnC,KAAK;AAqDX,eAAeA,KAAK;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}