{"ast":null,"code":"var _jsxFileName = \"/home/general/Escritorio/frontend_stafko/src/Pages/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Formulario from '../Components/Formulario/Formulario';\nimport { useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Tu lógica para el inicio de sesión aquí\n    } catch (error) {\n      console.error('Error al iniciar sesión:', error.response);\n      setErrorMessage('Error al iniciar sesión');\n      Swal.fire({\n        icon: 'error',\n        title: 'Error de inicio de sesión',\n        text: 'Error al iniciar sesión'\n      });\n    }\n  };\n  const handleDeleteRepository = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/users/' + id, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (response.ok) {\n        // El repositorio se eliminó correctamente\n        console.log('Repositorio eliminado');\n      } else {\n        // Si la respuesta no está bien, maneja el error\n        console.error('Error al eliminar el repositorio');\n      }\n    } catch (error) {\n      // Manejo de errores\n      console.error('Error al eliminar el repositorio:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formulario, {\n      handleChangeUser: setUsername,\n      handleChangePassword: setPassword,\n      handleSubmit: handleSubmit,\n      handleDeleteRepository: handleDeleteRepository\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"8U378PBpQ7JiNpIRa9lTFGoSkAQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nconst handleSubmit = async e => {\n  e.preventDefault();\n  try {\n    const response = await fetch('http://localhost:3000/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    });\n    if (response.ok) {\n      console.log('Inicio de sesión exitoso');\n      navigate(`/main/${username}`);\n    } else {\n      throw new Error('Error al iniciar sesión');\n    }\n  } catch (error) {\n    console.error('Error al iniciar sesión:', error);\n    setErrorMessage('Error al iniciar sesión'); // Mensaje de error genérico\n    Swal.fire({\n      icon: 'error',\n      title: 'Error de inicio de sesión',\n      text: 'Error al iniciar sesión'\n    });\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Formulario","useNavigate","Swal","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","navigate","handleSubmit","e","preventDefault","error","console","response","fire","icon","title","text","handleDeleteRepository","fetch","id","method","credentials","ok","log","children","handleChangeUser","handleChangePassword","fileName","_jsxFileName","lineNumber","columnNumber","_c","headers","body","JSON","stringify","Error","$RefreshReg$"],"sources":["/home/general/Escritorio/frontend_stafko/src/Pages/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Formulario from '../Components/Formulario/Formulario';\nimport { useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2';\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Tu lógica para el inicio de sesión aquí\n    } catch (error) {\n      console.error('Error al iniciar sesión:', error.response);\n      setErrorMessage('Error al iniciar sesión');\n      Swal.fire({\n        icon: 'error',\n        title: 'Error de inicio de sesión',\n        text: 'Error al iniciar sesión'\n      });\n    }\n  };\n\n  const handleDeleteRepository = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/users/' + id, {\n        method: 'GET',\n        credentials: 'include'\n      });\n\n      if (response.ok) {\n        // El repositorio se eliminó correctamente\n        console.log('Repositorio eliminado');\n      } else {\n        // Si la respuesta no está bien, maneja el error\n        console.error('Error al eliminar el repositorio');\n      }\n    } catch (error) {\n      // Manejo de errores\n      console.error('Error al eliminar el repositorio:', error);\n    }\n  };\n\n  return (\n    <div>\n      <Formulario\n        handleChangeUser={setUsername}\n        handleChangePassword={setPassword}\n        handleSubmit={handleSubmit}\n        handleDeleteRepository={handleDeleteRepository}\n      />\n    </div>\n  );\n};\n\nexport default Login;\n\n\n\n\n\n\n\n\n\n\n\n\nconst handleSubmit = async (e) => {\n  e.preventDefault();\n\n  try {\n    const response = await fetch('http://localhost:3000/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    });\n\n    if (response.ok) {\n      console.log('Inicio de sesión exitoso');\n      navigate(`/main/${username}`);\n    } else {\n      throw new Error('Error al iniciar sesión');\n    }\n  } catch (error) {\n    console.error('Error al iniciar sesión:', error);\n    setErrorMessage('Error al iniciar sesión'); // Mensaje de error genérico\n    Swal.fire({\n      icon: 'error',\n      title: 'Error de inicio de sesión',\n      text: 'Error al iniciar sesión'\n    });\n  }\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,qCAAqC;AAC5D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMc,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF;IAAA,CACD,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACE,QAAQ,CAAC;MACzDP,eAAe,CAAC,yBAAyB,CAAC;MAC1CV,IAAI,CAACkB,IAAI,CAAC;QACRC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,2BAA2B;QAClCC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMC,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMM,KAAK,CAAC,8BAA8B,GAAGC,EAAE,EAAE;QAChEC,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,IAAIT,QAAQ,CAACU,EAAE,EAAE;QACf;QACAX,OAAO,CAACY,GAAG,CAAC,uBAAuB,CAAC;MACtC,CAAC,MAAM;QACL;QACAZ,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAC;MACnD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACd;MACAC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D;EACF,CAAC;EAED,oBACEb,OAAA;IAAA2B,QAAA,eACE3B,OAAA,CAACJ,UAAU;MACTgC,gBAAgB,EAAExB,WAAY;MAC9ByB,oBAAoB,EAAEvB,WAAY;MAClCI,YAAY,EAAEA,YAAa;MAC3BU,sBAAsB,EAAEA;IAAuB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC/B,EAAA,CApDID,KAAK;EAAA,QAIQJ,WAAW;AAAA;AAAAqC,EAAA,GAJxBjC,KAAK;AAsDX,eAAeA,KAAK;AAapB,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMM,KAAK,CAAC,mCAAmC,EAAE;MAChEE,MAAM,EAAE,MAAM;MACdY,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDX,WAAW,EAAE,SAAS;MACtBY,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBnC,QAAQ,EAAEA,QAAQ;QAClBE,QAAQ,EAAEA;MACZ,CAAC;IACH,CAAC,CAAC;IAEF,IAAIU,QAAQ,CAACU,EAAE,EAAE;MACfX,OAAO,CAACY,GAAG,CAAC,0BAA0B,CAAC;MACvCjB,QAAQ,CAAE,SAAQN,QAAS,EAAC,CAAC;IAC/B,CAAC,MAAM;MACL,MAAM,IAAIoC,KAAK,CAAC,yBAAyB,CAAC;IAC5C;EACF,CAAC,CAAC,OAAO1B,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChDL,eAAe,CAAC,yBAAyB,CAAC,CAAC,CAAC;IAC5CV,IAAI,CAACkB,IAAI,CAAC;MACRC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE,2BAA2B;MAClCC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;AACF,CAAC;AAAC,IAAAe,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}